# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    ## 형상 다운로드
      - name: Checkout repository
        uses: actions/checkout@v2
    ## 빌드
      - name: Build package
        run: ./gradlew bootJar
    ## 빌드 아티팩트 확인
      - name: Show structure of artiface files
        run: ls -ahl ./build/lins/*.jar
    ## 빌드 아티팩트 업로드
      - name: Upload build artifact for job
        uses: actions/upload-artifact@v3
        with:
          ## 업로드 키 값
          name: project_artiface
          ## Gradle의 경우
          path: "./build/libs/*.jar"
## 2. 배포          
  distribute:
    ## 빌드가 선행되어야 함.
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
        ## 아티팩트 전송을 위한 임시 공간
        - name: Create distribute
          run: mkdir ~/dist
        ## 빌드 한 아티팩트 다운로드
        - name: Download build artifact for job
          uses: actions/download-artiface@v3
          with:
            name: project_artifact
            path: dist
        ## 아티팩트 확인
        - name: Show structure of downloaded files
          run: | 
            ls -alh dist
        ## 서버에 아티팩트 전송
        - name: Transfer artifact
          uses: appleboy/scp-action@master
          with:
            username: ${{ secrets.USERNAME }}
            host: ${{ secrets.HOST }}
            port: ${{ secrets.PORT }}
            key: ${{ secrets.KEY }}
            rm: true
            source: "dist/*.jar"
            target: ${{ secrets.DIST_PATH }}
            strip_components: 1
        ## 전송된 아티팩트 확인
        - name: Show structure of transfer files
          uses: appleboy/ssh-action@master
          with:
            username: ${{ secrets.USERNAME }}
            host: ${{ secrets.HOST }}
            port: ${{ secrets.PORT }}
            key: ${{ secrets.KEY }}
            script: |
              cd ${{ secrets.DIST_PATH }}
              ls -alh
              
  ## 3. 서비스 재기동
  service_restart:
    needs: [ build, distribute ]
    runs-on: ubuntu-latest
    steps:
      - name: Call service restart
        uses: appleboy/ssh-action@master
        with:
            username: ${{ secrets.USERNAME }}
            host: ${{ secrets.HOST }}
            port: ${{ secrets.PORT }}
            key: ${{ secrets.KEY }}
            script: |
              cd ${{ secrets.DIST_PATH }}
              echo "서비스 종료 스크립트. pgrep 부분 개선 및 루프 .."
              echo "서비스 시작 스크립트"
          
        
      
    

